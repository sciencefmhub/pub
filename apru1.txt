Title: QuakeSim Web Computing Infrastructure


Authors: Marlon Pierce and Geoffrey Fox (Community Grids Laboratory, Indiana University, Bloomington, IN 47401; Tel 812-856-1212; email: mpierce@cs.indiana.edu)

The QuakeSim project provides an open, service-based architecture that integrates a range of time-series and deformation analysis applications with distributed data sources such as Global Positioning System time and velocity series data and earthquake fault models.  By following a distributed service model, we are able to integrate our services with third party data sources and utilize international scale supercomputing infrastructure from the NSF TeraGrid.  Furthermore, our approach supports a range of client interfaces, including enterprise Java portlets, Google gadgets, workflow engines, and mash-ups.  Application areas from our collaborators include GPS time series analysis using event detection and classification algorithms; surface deformation and fault modeling through inversion codes; and finite element modeling of seismic displacements and simulated InSAR.

Distributed components in QuakeSim come in two varieties. First, request-response style invocations are suitable for user-driven clients and are used for example to invoke simulation codes and query databases.  This style of service architecture is undergoing a transformation as "enterprise" approaches such as Web Services, Grids, and traditional computing are confronted with "Web 2.0" approaches such as syndication feeds, lightweight user interface gadgets, and elastic cloud computing.  We discuss the impact of these developments on QuakeSim and Web-based scientific computing in general.  Second, publish-subscribe style messaging is suitable for streaming data sources such as sensors that continuously publish data.  The California Real Time Network represents an important real-time source of geophysical (GPS) data for our project, but our general architecture can be applied to any sensor, including webcams, motion, and environmental sensors. In either case, our goal in Quake
Sim is to integrate these with analysis applications for filtering and transforming information.
